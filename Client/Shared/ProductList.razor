@page "/productlist"
@inject IClientProductService ProductService


<h3>ProductList</h3>
@if (ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>Loading products...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.Products)
        {
            <li class="oi-media-pause my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="https://www.google.lk">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Title">
                    </a>
                </div>
                <div class="media-body">
                    <a href="#">
                        <h4 class="mb-0">@product.Title</h4>
                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">LKR @product.Price</h5>
                </div>
            </li>
        }
    </ul>
}

@code {
    private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();
        //var result = await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/Product");
        //Products = result.Data;
        //return base.OnInitializedAsync();
    }
}
